# 参考：https://github.com/autocracy/python-ipy

# IP地址、网段的基本处理
>>> from IPy import IP
>>> IP('10.0.0.0/8').version()
4
>>> IP('::1').version()
6
>>> ip = IP('192.168.0.0/16')
>>> print ip.len()
65536
>>> for x in ip:
...     print(x)
...
192.168.0.0
192.168.0.1
192.168.0.2
192.168.0.3
192.168.0.4
192.168.0.5
......
192.168.255.254
192.168.255.255

# 反向解析名称、IP类型、IP转换
>>> ip = IP('192.168.1.20')
>>> ip.reverseNames()
['20.1.168.192.in-addr.arpa.']
>>> ip.iptype()
'PRIVATE'
>>> IP('8.8.8.8').iptype()
'PUBLIC'
>>> IP('8.8.8.8').int()
134744072L
>>> IP('8.8.8.8').strHex()
'0x8080808'
>>> IP('8.8.8.8').strBin()
'00001000000010000000100000001000'
>>> print(IP('0x8080808'))
8.8.8.8

# 可以进行网络地址的转换，例如根据IP与掩码生产网段格式
>>> print(IP('192.168.1.0').make_net('255.255.255.0'))
192.168.1.0/24
>>> print(IP('192.168.1.0/255.255.255.0', make_net=True))
192.168.1.0/24
>>> print(IP('192.168.1.0-192.168.1.255', make_net=True))
192.168.1.0/24

# 也可以通过strNonnal方法指定不同wantprefixlen参数值以定制不同输出类型的网段
>>> IP('192.168.1.0/24').strNormal(0)
'192.168.1.0'
>>> IP('192.168.1.0/24').strNormal(1)
'192.168.1.0/24'
>>> IP('192.168.1.0/24').strNormal(2)
'192.168.1.0/255.255.255.0'
>>> IP('192.168.1.0/24').strNormal(3)
'192.168.1.0-192.168.1.255'

# 多网络计算方法详解
>>> IP('10.0.0.0/24') < IP('12.0.0.0/24')
True
>>> '192.168.1.100' in IP('192.168.0.0/16')
True
>>> IP('192.168.0.0/23').overlaps('192.168.1.0/24')
1
>>> IP('192.168.0.0/23').overlaps('192.168.2.0')
0
